/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_superagent = require('superagent'); /* istanbul ignore next */var _superagent2 = _interopRequireDefault(_superagent);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var 

User = function (_React$Component) {_inherits(User, _React$Component);
    function User(props) {/* istanbul ignore next */_classCallCheck(this, User); /* istanbul ignore next */var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(User).call(this, 
        props));

        /* istanbul ignore next */_this.state = { 
            events: [] }; /* istanbul ignore next */return _this;}_createClass(User, [{ key: 'componentWillMount', value: function componentWillMount() 



        {/* istanbul ignore next */var _this2 = this;
            /* istanbul ignore next */_superagent2.default.get( /* istanbul ignore next */'https://api.github.com/users/' + this.props.params.user + '/events').
            end(function (error, response) {
                if (!error && response) {
                    /* istanbul ignore next */_this2.setState({ events: response.body });} else 
                {
                    console.log( /* istanbul ignore next */'Error fetching user data.', error);}});} }, { key: 'render', value: function render() 





        {
            return (/* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */null, 
                /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'p', /* istanbul ignore next */null, /* istanbul ignore next */'Content for ', this.props.params.user, /* istanbul ignore next */' to go here.')));} }]);return User;}( /* istanbul ignore next */_react2.default.Component); /* istanbul ignore next */exports.default = 




User;